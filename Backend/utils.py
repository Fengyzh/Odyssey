def format_chunks(stream_res, isGenerate=False):
    complete_text = []
    for chunk in stream_res:
        if isGenerate:
            complete_text.append(chunk['response'])
        else:
            print(chunk['message']['content'], end='', flush=True)
            complete_text += chunk['message']['content']

    return complete_text


def context2Plain(context):
    plain = ""

    for i in context:
        role, msg = i['role'], i['content']
        plain += f"{role}: {msg}\n"
    return plain

def flatten_2d_list(lst, low_empty_space=True):
    res = '\n'.join([item for sublist in lst for item in sublist])
    if low_empty_space:
        res.replace("\n\n", "")
    return res


if __name__ == '__main__':
    res = flatten_2d_list([['(Picture shows the inode usage after the command “df”)\n\n\n  \n\n(Picture shows the file within the directory, the inode number of each files after the command “ls -i” and using the “find” command to find the simcir.js file)\n BM25'], ['tracking, there are numbers called inode numbers that refers to each inodes, by using the command “ls -i” the terminal will display each individual inode numbers associate to each file. By using the command “find -ium(inode number)”, you will be able to find that specific file with that inode number. This became a way to effectively find a certain files within the system, especially in Unix, where there are large amounts of files within the system generated by users.']])
    print(res.replace("\n\n", ""))

